// Code generated by mockery v2.30.1. DO NOT EDIT.

package usecase_test

import (
	command "github.com/rcgc/go-hexagonal.git/internal/class/application/command"
	mock "github.com/stretchr/testify/mock"
)

// RepositoryUpdateClassesDoneMock is an autogenerated mock type for the RepositoryUpdateClassesDone type
type RepositoryUpdateClassesDoneMock struct {
	mock.Mock
}

// UpdateClassesByEmail provides a mock function with given fields: cmd
func (_m *RepositoryUpdateClassesDoneMock) UpdateClassesByEmail(cmd command.Update) error {
	ret := _m.Called(cmd)

	var r0 error
	if rf, ok := ret.Get(0).(func(command.Update) error); ok {
		r0 = rf(cmd)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewRepositoryUpdateClassesDoneMock creates a new instance of RepositoryUpdateClassesDoneMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRepositoryUpdateClassesDoneMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *RepositoryUpdateClassesDoneMock {
	mock := &RepositoryUpdateClassesDoneMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}